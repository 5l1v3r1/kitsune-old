This transforamtion is a very fragile prototype. 

TODO:
- Double check that you can have another GEP instruction in th compute method
- Have someone test this transformation
- Double type is currently hard coded for the data structure and the buffers, fix this
- Remove the requirement that only one operation can be performed on that gather variable
- Test this transforamtion for interoperability with other transformations
- Two buffers is currently hard coded, should be generalize to support n buffers
- Currently the gather variable and index variable must be global. Change this?

Notes:
- Buffers are allocated on the stack, and could possibly cause a stack overflow. 
- The current transformation works for a very specific source code structure: 
  - There must be a compute method, which needn't be named "compute," that has the indirect accesses
  - The loop of interest inside the compute method must be annotated with the custom pragma
  - The compute method must be called within the main method
  - There must be only one operation on the gather variable

Building on this work:
- This might make a good use case for a custom backend that syncs on memory instead of tokens
